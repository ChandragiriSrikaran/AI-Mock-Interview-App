'use client';

import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { 
  UserCircle2, 
  Settings, 
  Play, 
  MessageSquare, 
  LineChart,
  ChevronDown,
  CheckCircle
} from 'lucide-react';
import Header from "@/app/Dashboard/_components/Header";

const steps = [
  {
    icon: UserCircle2,
    title: '1. Sign In / Sign Up',
    description: 'Create your account using your email to access the AI-powered interview dashboard.',
    color: 'bg-blue-500',
    detailedDescription: 'Secure authentication process with email verification. Your data is encrypted and protected.',
  },
  {
    icon: Settings,
    title: '2. Choose Interview Preferences',
    description: 'Select job role, difficulty level, and interview mode (MCQ or verbal).',
    color: 'bg-purple-500',
    detailedDescription: 'Customize your interview experience with options for different roles, experience levels, and specific skills.',
  },
  {
    icon: Play,
    title: '3. Start the Interview',
    description: 'Receive questions generated by the AI based on your preferences.',
    color: 'bg-green-500',
    detailedDescription: 'Our AI generates relevant questions based on real interview scenarios and current industry trends.',
  },
  {
    icon: MessageSquare,
    title: '4. Get Real-time Feedback',
    description: 'After each response, receive instant feedback to improve your answers.',
    color: 'bg-orange-500',
    detailedDescription: 'Detailed analysis of your responses with suggestions for improvement and industry best practices.',
  },
  {
    icon: LineChart,
    title: '5. Track Your Progress',
    description: 'Access your interview history, scores, and improvement tips.',
    color: 'bg-pink-500',
    detailedDescription: 'Comprehensive analytics dashboard showing your progress over time and areas for improvement.',
  },
];

export default function HowItWorksPage() {
  const [activeStep, setActiveStep] = useState(null);
  const [completedSteps, setCompletedSteps] = useState([]);

  const handleStepClick = (index) => {
    setActiveStep(activeStep === index ? null : index);
    if (!completedSteps.includes(index)) {
      setCompletedSteps([...completedSteps, index]);
    }
  };

  const handleStartDemo = () => {
    let step = 0;
    const interval = setInterval(() => {
      if (step < steps.length) {
        handleStepClick(step);
        step++;
      } else {
        clearInterval(interval);
      }
    }, 1000);
  };

  return (
    <div className="bg-gradient-to-b from-gray-50 to-gray-100 min-h-screen flex flex-col">
      <Header />
      <div className="max-w-5xl mx-auto px-6 py-2 flex-grow">
        <h1 className="text-4xl font-bold text-center mb-6 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600">
          How It Works
        </h1>
        {/* Interactive Demo Button
        <div className="text-center mb-12">
          <button
            onClick={handleStartDemo}
            className="text-sm text-gray-600 hover:text-gray-800 underline decoration-dashed"
          >
            Watch Demo
          </button>
        </div> */}

        {/* Animated Flowchart */}
        <div className="relative">
          <div className="absolute left-1/2 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-200 via-purple-200 to-pink-200"></div>
          
          <div className="space-y-16">
            {steps.map((step, idx) => (
              <div 
                key={idx} 
                className="relative group"
                onClick={() => handleStepClick(idx)}
              >
                
                {/* Step Card */}
                <div className={`
                  relative flex items-center gap-6 cursor-pointer
                  ${idx % 2 === 0 ? 'flex-row' : 'flex-row-reverse'}
                  transition-all duration-300 ease-in-out
                  ${activeStep === idx ? 'scale-105' : 'hover:scale-102'}
                `}>
                  {/* Icon Circle */}
                  <div className={`
                    relative flex-shrink-0 w-16 h-16 rounded-full ${step.color}
                    flex items-center justify-center
                    shadow-lg transform transition-transform duration-300
                    ${activeStep === idx ? 'rotate-12' : 'group-hover:rotate-6'}
                  `}>
                    <step.icon className="w-8 h-8 text-white" />
                    {completedSteps.includes(idx) && (
                      <div className="absolute -top-1 -right-1 bg-green-500 rounded-full p-1">
                        <CheckCircle className="w-4 h-4 text-white" />
                      </div>
                    )}
                  </div>
                  
                  {/* Content Card */}
                  <div className={`
                    w-fit bg-white rounded-2xl shadow-xl p-4 border border-gray-100
                    transition-all duration-300 ease-in-out
                    ${activeStep === idx ? 'border-blue-300 ring-2 ring-blue-100' : ''}
                    `}>
                    <h3 className="text-xl font-semibold text-gray-800 mb-2">
                      {step.title}
                    </h3>
                    <p className="text-gray-600">{step.description}</p>
                    
                    
                    {/* Expanded Content */}
                    <div className={`
                      mt-4 overflow-hidden transition-all duration-300
                      ${activeStep === idx ? 'max-h-40 opacity-100' : 'max-h-0 opacity-0'}
                    `}>
                      <p className="text-sm text-gray-500 border-t pt-4">
                        {step.detailedDescription}
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="text-center mt-16">
          <Button 
            className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-primary hover:to-primary text-white px-8 py-3 rounded-full text-lg font-semibold shadow-lg transform transition-transform duration-300 hover:scale-105"
          >
            Start Mock Interview
          </Button>
        </div>
      </div>
    </div>
  );
}